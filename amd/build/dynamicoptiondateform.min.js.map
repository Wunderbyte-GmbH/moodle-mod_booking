{"version":3,"file":"dynamicoptiondateform.min.js","sources":["../src/dynamicoptiondateform.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    mod_booking\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport DynamicForm from 'core_form/dynamicform';\nimport Templates from 'core/templates';\n\nconst optiondateForm = new DynamicForm(document.querySelector('#optiondates-form'), 'mod_booking\\\\form\\\\optiondate_form');\n\nexport const init = (cmid, bookingid, optionid) => {\n\n    optiondateForm.load({\n        'cmid': cmid,\n        'bookingid': bookingid,\n        'optionid': optionid\n    })\n    .then(() => {\n        datelistinit();\n        return;\n    })\n    // Deal with this exception (Using core/notify exception function is recommended).\n    // eslint-disable-next-line no-undef\n    .catch(ex => displayException(ex));\n\n    optiondateForm.addEventListener(optiondateForm.events.FORM_SUBMITTED, (e) => {\n\n        // Remember values when form gets submitted.\n        var chooseperiodvalue = document.getElementsByName('chooseperiod')[0].value;\n        var reoccurringdatestringvalue = document.getElementsByName('reoccurringdatestring')[0].value;\n\n        // It is recommended to reload the form after submission because the elements may change.\n        // This will also remove previous submission errors. You will need to pass the same arguments to the form\n        // that you passed when you rendered the form on the page.\n\n        optiondateForm.load({\n            'cmid': cmid,\n            'bookingid': bookingid,\n            'optionid': optionid\n        })\n        .then(() => {\n\n            e.preventDefault();\n            const response = e.detail;\n\n            Templates.renderForPromise('mod_booking/bookingoption_dates', response)\n            // It returns a promise that needs to be resolved.\n            .then(({html}) => {\n                document.querySelector('.optiondates-list').innerHTML = '';\n                Templates.appendNodeContents('.optiondates-list', html);\n                return;\n            })\n            // Deal with this exception (Using core/notify exception function is recommended).\n            // eslint-disable-next-line no-undef\n            .catch(ex => displayException(ex));\n\n            var oldlists = document.getElementsByClassName('optiondates-list');\n            while (oldlists.length > 1) {\n                oldlists[oldlists.length - 1].parentNode.removeChild(oldlists[oldlists.length - 1]);\n            }\n\n            // This is needed to fix datelist bugs.\n            datelistinit();\n\n            // We need this, so we don't lose the form data after reloading.\n            document.getElementsByName('chooseperiod')[0].value = chooseperiodvalue;\n            document.getElementsByName('reoccurringdatestring')[0].value = reoccurringdatestringvalue;\n            // Also load the data into the hidden elements which we need to pass the values to the non-dynamic form.\n            document.querySelector('#semesterid').value = chooseperiodvalue;\n            document.querySelector('#dayofweektime').value = reoccurringdatestringvalue;\n\n            return;\n        })\n        // Deal with this exception (Using core/notify exception function is recommended).\n        // eslint-disable-next-line no-undef\n        .catch(ex => displayException(ex));\n    });\n};\n\nexport const datelistinit = () => {\n\n    var dateform = document.querySelector(\"#optiondates-form\");\n    var datelist = document.querySelector(\".optiondates-list\");\n\n    datelist.parentNode.removeChild(datelist);\n    // Important: Move datelist after dateform so $_POST will work in PHP.\n    dateform.parentNode.insertBefore(datelist, dateform.nextSibling);\n\n    datelist.addEventListener('click', function(e) {\n\n        let action = e.target.dataset.action;\n        let targetid = e.target.dataset.targetid;\n\n        if (action === 'delete') {\n            e.target.closest('li').remove();\n            document.getElementById(targetid).remove();\n        }\n\n        if (action === 'add') {\n            let targetElement = e.target.closest('li');\n            let date = document.querySelector(\"#meeting-time\");\n            let element = '<li><span class=\"badge bg-primary\">' + date.value +\n                '</span> <i class=\"fa fa-trash ml-2 icon-red\" data-action=\"delete\"></i></li>';\n            targetElement.insertAdjacentHTML('afterend', element);\n        }\n    });\n\n    // Add an event listener to the chooseperiod autocomplete to store semesterid in a hidden input field.\n    // We need this, so we can save it later via $_POST from the not dynamic moodle form.\n    document.getElementsByName('chooseperiod')[0].addEventListener('change', (e) => {\n        document.querySelector('#semesterid').value = e.target.value;\n    });\n\n    // Add an event listener to the reoccurring datestring to store it in a hidden input field.\n    // We need this, so we can save it later via $_POST from the not dynamic moodle form.\n    document.getElementsByName('reoccurringdatestring')[0].addEventListener('keyup', (e) => {\n        document.querySelector('#dayofweektime').value = e.target.value;\n    });\n};\n"],"names":["optiondateForm","DynamicForm","document","querySelector","cmid","bookingid","optionid","load","then","datelistinit","catch","ex","displayException","addEventListener","events","FORM_SUBMITTED","e","chooseperiodvalue","getElementsByName","value","reoccurringdatestringvalue","preventDefault","response","detail","renderForPromise","html","innerHTML","appendNodeContents","oldlists","getElementsByClassName","length","parentNode","removeChild","dateform","datelist","insertBefore","nextSibling","action","target","dataset","targetid","closest","remove","getElementById","targetElement","element","insertAdjacentHTML"],"mappings":";;;;;4MAwBMA,eAAiB,IAAIC,qBAAYC,SAASC,cAAc,qBAAsB,oDAEhE,SAACC,KAAMC,UAAWC,UAElCN,eAAeO,KAAK,MACRH,eACKC,mBACDC,WAEfE,MAAK,WACFC,kBAKHC,OAAM,SAAAC,WAAMC,iBAAiBD,OAE9BX,eAAea,iBAAiBb,eAAec,OAAOC,gBAAgB,SAACC,OAG/DC,kBAAoBf,SAASgB,kBAAkB,gBAAgB,GAAGC,MAClEC,2BAA6BlB,SAASgB,kBAAkB,yBAAyB,GAAGC,MAMxFnB,eAAeO,KAAK,MACRH,eACKC,mBACDC,WAEfE,MAAK,WAEFQ,EAAEK,qBACIC,SAAWN,EAAEO,0BAETC,iBAAiB,kCAAmCF,UAE7Dd,MAAK,mBAAEiB,UAAAA,KACJvB,SAASC,cAAc,qBAAqBuB,UAAY,sBAC9CC,mBAAmB,oBAAqBF,SAKrDf,OAAM,SAAAC,WAAMC,iBAAiBD,eAE1BiB,SAAW1B,SAAS2B,uBAAuB,oBACxCD,SAASE,OAAS,GACrBF,SAASA,SAASE,OAAS,GAAGC,WAAWC,YAAYJ,SAASA,SAASE,OAAS,IAIpFrB,eAGAP,SAASgB,kBAAkB,gBAAgB,GAAGC,MAAQF,kBACtDf,SAASgB,kBAAkB,yBAAyB,GAAGC,MAAQC,2BAE/DlB,SAASC,cAAc,eAAegB,MAAQF,kBAC9Cf,SAASC,cAAc,kBAAkBgB,MAAQC,8BAMpDV,OAAM,SAAAC,WAAMC,iBAAiBD,eAIzBF,aAAe,eAEpBwB,SAAW/B,SAASC,cAAc,qBAClC+B,SAAWhC,SAASC,cAAc,qBAEtC+B,SAASH,WAAWC,YAAYE,UAEhCD,SAASF,WAAWI,aAAaD,SAAUD,SAASG,aAEpDF,SAASrB,iBAAiB,SAAS,SAASG,OAEpCqB,OAASrB,EAAEsB,OAAOC,QAAQF,OAC1BG,SAAWxB,EAAEsB,OAAOC,QAAQC,YAEjB,WAAXH,SACArB,EAAEsB,OAAOG,QAAQ,MAAMC,SACvBxC,SAASyC,eAAeH,UAAUE,UAGvB,QAAXL,OAAkB,KACdO,cAAgB5B,EAAEsB,OAAOG,QAAQ,MAEjCI,QAAU,sCADH3C,SAASC,cAAc,iBACyBgB,MACvD,8EACJyB,cAAcE,mBAAmB,WAAYD,aAMrD3C,SAASgB,kBAAkB,gBAAgB,GAAGL,iBAAiB,UAAU,SAACG,GACtEd,SAASC,cAAc,eAAegB,MAAQH,EAAEsB,OAAOnB,SAK3DjB,SAASgB,kBAAkB,yBAAyB,GAAGL,iBAAiB,SAAS,SAACG,GAC9Ed,SAASC,cAAc,kBAAkBgB,MAAQH,EAAEsB,OAAOnB"}