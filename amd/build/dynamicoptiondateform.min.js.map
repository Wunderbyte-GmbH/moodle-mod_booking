{"version":3,"file":"dynamicoptiondateform.min.js","sources":["../src/dynamicoptiondateform.js"],"sourcesContent":["/* eslint-disable promise/always-return */\n/* eslint-disable promise/catch-or-return */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    mod_booking\n * @copyright  2022 Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport DynamicForm from 'core_form/dynamicform';\nimport ModalForm from 'core_form/modalform';\nimport Templates from 'core/templates';\nimport {exception as displayException} from 'core/notification';\n\nconst optiondateForm = new DynamicForm(document.querySelector('#optiondates-form'), 'mod_booking\\\\form\\\\dynamicoptiondateform');\n\nexport const initdynamicoptiondateform = (cmid, bookingid, optionid, modalTitle, formClass) => {\n\n    optiondateForm.load({\n        'cmid': cmid,\n        'bookingid': bookingid,\n        'optionid': optionid,\n        'modalTitle': modalTitle,\n        'formClass': formClass\n    })\n    .then(() => {\n        datelistinit();\n        initmodaloptiondateform(modalTitle, formClass);\n        return;\n    })\n    // Deal with this exception (Using core/notify exception function is recommended).\n    // eslint-disable-next-line no-undef\n    .catch(ex => displayException(ex));\n\n    optiondateForm.addEventListener(optiondateForm.events.SERVER_VALIDATION_ERROR, () => {\n        datelistinit();\n        initmodaloptiondateform(modalTitle, formClass);\n        return;\n    });\n\n    optiondateForm.addEventListener(optiondateForm.events.FORM_SUBMITTED, (e) => {\n\n        // Remember values when form gets submitted.\n        var chooseperiodvalue = document.querySelector('[name=\"chooseperiod\"]').value;\n        var reoccurringdatestringvalue = document.querySelector('[name=\"reoccurringdatestring\"]').value;\n\n        // It is recommended to reload the form after submission because the elements may change.\n        // This will also remove previous submission errors. You will need to pass the same arguments to the form\n        // that you passed when you rendered the form on the page.\n        optiondateForm.load({\n            'cmid': cmid,\n            'bookingid': bookingid,\n            'optionid': optionid,\n            'modalTitle': modalTitle,\n            'formClass': formClass\n        })\n        .then(() => {\n            // Only do this, if it's not a blocked event.\n            /* if (!reoccurringdatestringvalue.trim().toLowerCase().includes('block')) {} */\n\n            e.preventDefault();\n            const response = e.detail;\n\n            Templates.renderForPromise('mod_booking/bookingoption_dates', response)\n            // It returns a promise that needs to be resolved.\n            .then(({html, js}) => {\n\n                Templates.replaceNodeContents('.optiondates-list', html, js);\n\n                return;\n            })\n            // Deal with this exception (Using core/notify exception function is recommended).\n            // eslint-disable-next-line no-undef\n            .catch(ex => displayException(ex));\n\n            var oldlists = document.getElementsByClassName('optiondates-list');\n            while (oldlists.length > 1) {\n                oldlists[oldlists.length - 1].parentNode.removeChild(oldlists[oldlists.length - 1]);\n            }\n\n            // This is needed to fix datelist bugs.\n            datelistinit();\n\n            // We need this, so we don't lose the form data after reloading.\n            document.querySelector('[name=\"chooseperiod\"]').value = chooseperiodvalue;\n            document.querySelector('[name=\"reoccurringdatestring\"]').value = reoccurringdatestringvalue;\n            // Also load the data into the hidden elements which we need to pass the values to the non-dynamic form.\n            document.querySelector('#semesterid').value = chooseperiodvalue;\n            document.querySelector('#dayofweektime').value = reoccurringdatestringvalue;\n\n            // Initialize modal again.\n            initmodaloptiondateform(modalTitle, formClass);\n\n            return;\n        })\n        // Deal with this exception (Using core/notify exception function is recommended).\n        // eslint-disable-next-line no-undef\n        .catch(ex => displayException(ex));\n    });\n};\n\nexport const datelistinit = () => {\n\n    var dateform = document.querySelector(\"#optiondates-form\");\n    var datelist = document.querySelector(\".optiondates-list\");\n\n    datelist.parentNode.removeChild(datelist);\n    // Important: Move datelist after dateform so $_POST will work in PHP.\n    dateform.parentNode.insertBefore(datelist, dateform.nextSibling);\n\n    datelist.addEventListener('click', function(e) {\n\n        let action = e.target.dataset.action;\n        let targetid = e.target.dataset.targetid;\n\n        if (action === 'delete') {\n            e.target.closest('li').remove();\n            document.getElementById(targetid).remove();\n        }\n\n        if (action === 'add') {\n            let targetElement = e.target.closest('li');\n            let date = document.querySelector(\"#meeting-time\");\n            let element = '<li><span class=\"badge bg-primary\">' + date.value +\n                '</span> <i class=\"fa fa-trash ml-2 icon-red\" data-action=\"delete\"></i></li>';\n            targetElement.insertAdjacentHTML('afterend', element);\n        }\n    });\n\n    // Add an event listener to the chooseperiod autocomplete to store semesterid in a hidden input field.\n    // We need this, so we can save it later via $_POST from the not dynamic moodle form.\n    document.querySelector('[name=\"chooseperiod\"]').addEventListener('change', (e) => {\n        document.querySelector('#semesterid').value = e.target.value;\n    });\n\n    waitForElm('input[name=\"reoccurringdatestring\"]').then((stringelm) => {\n        const submitbutton = document.querySelector('#optiondates-form input[name=\"submitbutton\"]');\n        if (stringelm.value.trim().toLowerCase().includes('block')) {\n            submitbutton.style.display = 'none'; // Hide the button.\n        } else {\n            submitbutton.style.display = 'block'; // Show the button.\n        }\n    });\n\n    // Add an event listener to the reoccurring datestring to store it in a hidden input field.\n    // We need this, so we can save it later via $_POST from the not dynamic moodle form.\n    const reoccurringdatestring = document.querySelector('input[name=\"reoccurringdatestring\"]');\n    reoccurringdatestring.addEventListener('keyup', (e) => {\n        const submitbutton = document.querySelector('#optiondates-form input[name=\"submitbutton\"]');\n        if (e.target.value.trim().toLowerCase().includes('block')) {\n            submitbutton.style.display = 'none'; // Hide the button.\n        } else {\n            submitbutton.style.display = 'block'; // Show the button.\n        }\n        document.querySelector('#dayofweektime').value = e.target.value;\n    });\n};\n\nexport const initmodaloptiondateform = (modalTitle, formClass) => {\n    waitForElm('button[name=\"customdatesbtn\"]').then((customdatesbtn) => {\n        customdatesbtn.addEventListener('click', (e) => {\n            e.preventDefault();\n            const modalform = new ModalForm({\n                formClass,\n                modalConfig: {title: modalTitle},\n                returnFocus: e.currentTarget\n            });\n            // If necessary extend functionality by overriding class methods, for example:\n            modalform.addEventListener(modalform.events.FORM_SUBMITTED, (e) => {\n                const response = e.detail;\n\n                Templates.renderForPromise('mod_booking/bookingoption_dates_custom_list_items', response)\n                // It returns a promise that needs to be resolved.\n                .then(({html, js}) => {\n                    Templates.appendNodeContents('ul.reoccurringdates', html, js);\n                    return;\n                })\n                // Deal with this exception (Using core/notify exception function is recommended).\n                // eslint-disable-next-line no-undef\n                .catch(ex => displayException(ex));\n\n                Templates.renderForPromise('mod_booking/bookingoption_dates_custom_hidden_inputs', response)\n                // It returns a promise that needs to be resolved.\n                .then(({html, js}) => {\n                    Templates.appendNodeContents('div.optiondates-list', html, js);\n                    return;\n                })\n                // Deal with this exception (Using core/notify exception function is recommended).\n                // eslint-disable-next-line no-undef\n                .catch(ex => displayException(ex));\n            });\n            // Show the modal.\n            modalform.show();\n        });\n    });\n};\n\n/**\n * Wait until a certain element is loaded.\n * @param {string} selector - The element selector.\n * @returns {Promise}\n */\n function waitForElm(selector) {\n    // eslint-disable-next-line consistent-return\n    return new Promise(resolve => {\n        if (document.querySelector(selector)) {\n            return resolve(document.querySelector(selector));\n        }\n        const observer = new MutationObserver(() => {\n            if (document.querySelector(selector)) {\n                resolve(document.querySelector(selector));\n                observer.disconnect();\n            }\n        });\n        observer.observe(document.body, {\n            childList: true,\n            subtree: true\n        });\n    });\n}\n"],"names":["optiondateForm","DynamicForm","document","querySelector","cmid","bookingid","optionid","modalTitle","formClass","load","then","datelistinit","initmodaloptiondateform","catch","ex","addEventListener","events","SERVER_VALIDATION_ERROR","FORM_SUBMITTED","e","chooseperiodvalue","value","reoccurringdatestringvalue","preventDefault","response","detail","renderForPromise","html","js","replaceNodeContents","oldlists","getElementsByClassName","length","parentNode","removeChild","dateform","datelist","insertBefore","nextSibling","action","target","dataset","targetid","closest","remove","getElementById","targetElement","element","insertAdjacentHTML","waitForElm","stringelm","submitbutton","trim","toLowerCase","includes","style","display","customdatesbtn","modalform","ModalForm","modalConfig","title","returnFocus","currentTarget","appendNodeContents","show","selector","Promise","resolve","observer","MutationObserver","disconnect","observe","body","childList","subtree"],"mappings":";;;;;gTA4BMA,eAAiB,IAAIC,qBAAYC,SAASC,cAAc,qBAAsB,+EAE3C,SAACC,KAAMC,UAAWC,SAAUC,WAAYC,WAE7ER,eAAeS,KAAK,MACRL,eACKC,mBACDC,oBACEC,qBACDC,YAEhBE,MAAK,WACFC,eACAC,wBAAwBL,WAAYC,cAKvCK,OAAM,SAAAC,WAAM,2BAAiBA,OAE9Bd,eAAee,iBAAiBf,eAAegB,OAAOC,yBAAyB,WAC3EN,eACAC,wBAAwBL,WAAYC,cAIxCR,eAAee,iBAAiBf,eAAegB,OAAOE,gBAAgB,SAACC,OAG/DC,kBAAoBlB,SAASC,cAAc,yBAAyBkB,MACpEC,2BAA6BpB,SAASC,cAAc,kCAAkCkB,MAK1FrB,eAAeS,KAAK,MACRL,eACKC,mBACDC,oBACEC,qBACDC,YAEhBE,MAAK,WAIFS,EAAEI,qBACIC,SAAWL,EAAEM,0BAETC,iBAAiB,kCAAmCF,UAE7Dd,MAAK,mBAAEiB,UAAAA,KAAMC,QAAAA,sBAEAC,oBAAoB,oBAAqBF,KAAMC,OAM5Df,OAAM,SAAAC,WAAM,2BAAiBA,eAE1BgB,SAAW5B,SAAS6B,uBAAuB,oBACxCD,SAASE,OAAS,GACrBF,SAASA,SAASE,OAAS,GAAGC,WAAWC,YAAYJ,SAASA,SAASE,OAAS,IAIpFrB,eAGAT,SAASC,cAAc,yBAAyBkB,MAAQD,kBACxDlB,SAASC,cAAc,kCAAkCkB,MAAQC,2BAEjEpB,SAASC,cAAc,eAAekB,MAAQD,kBAC9ClB,SAASC,cAAc,kBAAkBkB,MAAQC,2BAGjDV,wBAAwBL,WAAYC,cAMvCK,OAAM,SAAAC,WAAM,2BAAiBA,eAIzBH,aAAe,eAEpBwB,SAAWjC,SAASC,cAAc,qBAClCiC,SAAWlC,SAASC,cAAc,qBAEtCiC,SAASH,WAAWC,YAAYE,UAEhCD,SAASF,WAAWI,aAAaD,SAAUD,SAASG,aAEpDF,SAASrB,iBAAiB,SAAS,SAASI,OAEpCoB,OAASpB,EAAEqB,OAAOC,QAAQF,OAC1BG,SAAWvB,EAAEqB,OAAOC,QAAQC,YAEjB,WAAXH,SACApB,EAAEqB,OAAOG,QAAQ,MAAMC,SACvB1C,SAAS2C,eAAeH,UAAUE,UAGvB,QAAXL,OAAkB,KACdO,cAAgB3B,EAAEqB,OAAOG,QAAQ,MAEjCI,QAAU,sCADH7C,SAASC,cAAc,iBACyBkB,MACvD,8EACJyB,cAAcE,mBAAmB,WAAYD,aAMrD7C,SAASC,cAAc,yBAAyBY,iBAAiB,UAAU,SAACI,GACxEjB,SAASC,cAAc,eAAekB,MAAQF,EAAEqB,OAAOnB,SAG3D4B,WAAW,uCAAuCvC,MAAK,SAACwC,eAC9CC,aAAejD,SAASC,cAAc,gDACxC+C,UAAU7B,MAAM+B,OAAOC,cAAcC,SAAS,SAC9CH,aAAaI,MAAMC,QAAU,OAE7BL,aAAaI,MAAMC,QAAU,WAMPtD,SAASC,cAAc,uCAC/BY,iBAAiB,SAAS,SAACI,OACvCgC,aAAejD,SAASC,cAAc,gDACxCgB,EAAEqB,OAAOnB,MAAM+B,OAAOC,cAAcC,SAAS,SAC7CH,aAAaI,MAAMC,QAAU,OAE7BL,aAAaI,MAAMC,QAAU,QAEjCtD,SAASC,cAAc,kBAAkBkB,MAAQF,EAAEqB,OAAOnB,iDAIrDT,wBAA0B,SAACL,WAAYC,WAChDyC,WAAW,iCAAiCvC,MAAK,SAAC+C,gBAC9CA,eAAe1C,iBAAiB,SAAS,SAACI,GACtCA,EAAEI,qBACImC,UAAY,IAAIC,mBAAU,CAC5BnD,UAAAA,UACAoD,YAAa,CAACC,MAAOtD,YACrBuD,YAAa3C,EAAE4C,gBAGnBL,UAAU3C,iBAAiB2C,UAAU1C,OAAOE,gBAAgB,SAACC,OACnDK,SAAWL,EAAEM,0BAETC,iBAAiB,oDAAqDF,UAE/Ed,MAAK,oBAAEiB,WAAAA,KAAMC,SAAAA,sBACAoC,mBAAmB,sBAAuBrC,KAAMC,OAK7Df,OAAM,SAAAC,WAAM,2BAAiBA,0BAEpBY,iBAAiB,uDAAwDF,UAElFd,MAAK,oBAAEiB,WAAAA,KAAMC,SAAAA,sBACAoC,mBAAmB,uBAAwBrC,KAAMC,OAK9Df,OAAM,SAAAC,WAAM,2BAAiBA,UAGlC4C,UAAUO,uBAUZhB,WAAWiB,iBAEV,IAAIC,SAAQ,SAAAC,YACXlE,SAASC,cAAc+D,iBAChBE,QAAQlE,SAASC,cAAc+D,eAEpCG,SAAW,IAAIC,kBAAiB,WAC9BpE,SAASC,cAAc+D,YACvBE,QAAQlE,SAASC,cAAc+D,WAC/BG,SAASE,iBAGjBF,SAASG,QAAQtE,SAASuE,KAAM,CAC5BC,WAAW,EACXC,SAAS"}