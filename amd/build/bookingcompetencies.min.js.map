{"version":3,"file":"bookingcompetencies.min.js","sources":["../src/bookingcompetencies.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Library containing general JS functions for the booking module.\n *\n * @module     mod_booking/bookingcompetencies\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getSortSelection} from 'local_wunderbyte_table/sort';\nimport {callLoadData} from 'local_wunderbyte_table/init';\n\n/**\n * Gets called from mustache template.\n *\n * @param {string} encodedtable\n */\nexport const init = (encodedtable) => {\n\n    // eslint-disable-next-line no-console\n    console.log(\"button found\");\n\n    const buttons = document.querySelectorAll(\".booking-competencies-trigger-filter-button\");\n\n    if (buttons) {\n        buttons.forEach(button => {\n\n            if (button.dataset.initialized) {\n                return;\n            }\n            const competencies = button.dataset.competencyIds;\n            const optionid = button.dataset.bookingoptionid;\n            const idstring = button.dataset.tableIdstring;\n\n\n            button.addEventListener('click', () => {\n                toggleCompetenciesFilter(button, competencies, optionid, idstring, encodedtable);\n            });\n            button.dataset.initialized = true;\n        });\n    }\n};\n\n/**\n * Toggle Competencies Filter\n * @param {any} button\n * @param {string} competencies\n * @param {int} optionid\n * @param {string} idstring\n * @param {string} encodedtable\n */\n export const toggleCompetenciesFilter = (\n    button,\n    competencies,\n    optionid,\n    idstring,\n    encodedtable) => {\n\n    // eslint-disable-next-line no-console\n    console.log(button, competencies, optionid, idstring);\n    const sort = getSortSelection(idstring);\n\n    const idsArray = competencies.split(',').map(id => id.trim());\n    const filterobjects = JSON.stringify({competencies: idsArray});\n\n    // eslint-disable-next-line no-console\n    console.log(filterobjects);\n\n    callLoadData(idstring,\n      encodedtable,\n      0, // Pagenumber is always set to 0.\n      null,\n      sort,\n      null,\n      null,\n      null,\n      filterobjects,\n      '');\n};\n\n\n"],"names":["encodedtable","console","log","buttons","document","querySelectorAll","forEach","button","dataset","initialized","competencies","competencyIds","optionid","bookingoptionid","idstring","tableIdstring","addEventListener","toggleCompetenciesFilter","sort","idsArray","split","map","id","trim","filterobjects","JSON","stringify"],"mappings":"8QA+BqBA,eAGjBC,QAAQC,IAAI,sBAENC,QAAUC,SAASC,iBAAiB,+CAEtCF,SACAA,QAAQG,SAAQC,YAERA,OAAOC,QAAQC,yBAGbC,aAAeH,OAAOC,QAAQG,cAC9BC,SAAWL,OAAOC,QAAQK,gBAC1BC,SAAWP,OAAOC,QAAQO,cAGhCR,OAAOS,iBAAiB,SAAS,KAC7BC,yBAAyBV,OAAQG,aAAcE,SAAUE,SAAUd,iBAEvEO,OAAOC,QAAQC,aAAc,YAa3BQ,yBAA2B,CACrCV,OACAG,aACAE,SACAE,SACAd,gBAGAC,QAAQC,IAAIK,OAAQG,aAAcE,SAAUE,gBACtCI,MAAO,0BAAiBJ,UAExBK,SAAWT,aAAaU,MAAM,KAAKC,KAAIC,IAAMA,GAAGC,SAChDC,cAAgBC,KAAKC,UAAU,CAAChB,aAAcS,WAGpDlB,QAAQC,IAAIsB,sCAECV,SACXd,aACA,EACA,KACAkB,KACA,KACA,KACA,KACAM,cACA"}