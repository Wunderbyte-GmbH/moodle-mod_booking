{"version":3,"file":"bookit.min.js","sources":["../src/bookit.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     mod_booking/bookit\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\n\nvar currentbookitpage = {};\nvar totalbookitpages = {};\n\nvar SELECTORS = {\n    MODALID: '#sbPrePageModal',\n    INMODALDIV: ' div.pageContent',\n    CONTINUEBUTTON: 'a.continue-button',\n    BACKBUTTON: 'a.back-button',\n    BOOKITBUTTON: 'div.booking-button-area',\n    INMODALBUTTON: 'div.in-modal-button',\n    STATICBACKDROP: 'div.modal-backdrop',\n};\n\nexport const initbookitbutton = (itemid, area) => {\n\n    const buttons = document.querySelectorAll(SELECTORS.BOOKITBUTTON +\n        '[data-itemid=\"' + itemid + '\"]' +\n        '[data-area=\"' + area + '\"]');\n\n    const selector = SELECTORS.BOOKITBUTTON +\n    '[data-itemid=\"' + itemid + '\"]' +\n    '[data-area=\"' + area + '\"]';\n    // eslint-disable-next-line no-console\n    console.log(selector, buttons);\n\n    if (!buttons) {\n        return;\n    }\n\n    // We support more than one booking button on the same page.\n    buttons.forEach(button => {\n\n        if (button.dataset.nojs) {\n            return;\n        }\n\n        // eslint-disable-next-line no-console\n        console.log('add click listener ', button);\n        if (!button.dataset.initialized) {\n            button.dataset.initialized = 'true';\n\n            const userid = button.dataset.userid;\n\n            button.addEventListener('click', e => {\n\n                e.stopPropagation();\n\n                // eslint-disable-next-line no-console\n                console.log('clicked ', e.target);\n\n                bookit(itemid, area, userid);\n            });\n        }\n    });\n};\n\n/**\n * Gets called from mustache template.\n * @param {integer} optionid\n * @param {integer} totalnumberofpages\n */\nexport const initprepagemodal = (optionid, totalnumberofpages) => {\n\n    // eslint-disable-next-line no-console\n    console.log('initprepagemodal', optionid);\n\n    currentbookitpage[optionid] = 0;\n    totalbookitpages[optionid] = totalnumberofpages;\n\n    respondToVisibility(optionid, totalnumberofpages, loadPreBookingPage);\n\n    // We can add the click listener to the continue button right away.\n\n    initializeButton(optionid, true); // Back button.\n    initializeButton(optionid, false); // Continue button.\n};\n\n/**\n * React on visibility change.\n * @param {integer} optionid\n * @param {integer} totalnumberofpages\n * @param {function} callback\n */\nfunction respondToVisibility(optionid, totalnumberofpages, callback) {\n\n    if (totalnumberofpages < 1) {\n        return;\n    }\n\n    const selector = SELECTORS.MODALID + optionid + SELECTORS.INMODALDIV;\n    let element = document.querySelector(selector);\n\n    if (!element) {\n        return;\n    }\n\n    // eslint-disable-next-line no-console\n    // console.log(selector, element);\n\n    var observer = new MutationObserver(function() {\n        if (!isHidden(element)) {\n            // Todo: Make sure it's not triggered on close.\n            callback(optionid);\n        }\n    });\n\n    // We look if we find a hidden parent. If not, we load right away.\n    while (element !== null) {\n        if (!isHidden(element)) {\n            element = element.parentElement;\n        } else {\n            if (element.dataset.observed) {\n                return;\n            }\n\n            observer.observe(element, {attributes: true});\n            element.dataset.observed = true;\n            return;\n        }\n    }\n    callback(optionid, totalnumberofpages);\n}\n\n/**\n * Function to check visibility of element.\n * @param {*} el\n * @returns {boolean}\n */\nfunction isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n\n/**\n * Loads the (next) pre booking page.\n * @param {integer} optionid\n */\nexport const loadPreBookingPage = (\n    optionid) => {\n\n    // eslint-disable-next-line no-console\n    // console.log('loadPreBookingPage ' + optionid, totalnumberofpages);\n\n    // We need to clear the content of the div.\n    const selector = SELECTORS.MODALID + optionid + SELECTORS.INMODALDIV;\n\n    const element = document.querySelector(selector);\n\n    while (element.firstChild) {\n        element.removeChild(element.firstChild);\n    }\n\n    Ajax.call([{\n        methodname: \"mod_booking_load_pre_booking_page\",\n        args: {\n            'optionid': optionid,\n            'pagenumber': currentbookitpage[optionid],\n        },\n        done: function(res) {\n\n            const jsonobject = JSON.parse(res.json);\n\n            // We support more than one template, they will be seperated by comma.\n            // We have a data key in the json\n            const templates = res.template.split(',');\n            let dataarray = jsonobject;\n            const buttontype = res.buttontype;\n\n            templates.forEach(template => {\n\n                const data = dataarray.shift();\n\n                if (!data) {\n                    return true;\n                }\n\n                Templates.renderForPromise(template, data.data).then(({html, js}) => {\n\n                    // eslint-disable-next-line no-console\n                    // console.log(selector);\n\n                    Templates.appendNodeContents(selector, html, js);\n\n                    return true;\n                }).catch(ex => {\n                    Notification.addNotification({\n                        message: 'failed rendering ' + ex,\n                        type: \"danger\"\n                    });\n                });\n\n                return true;\n            });\n\n            showRightButton(optionid, buttontype);\n\n            return true;\n        },\n        fail: function(err) {\n            // eslint-disable-next-line no-console\n            console.log(err);\n        }\n    }]);\n};\n\n/**\n * Reveal the hidden continue button.\n * @param {interger} optionid\n * @param {interger} buttontype\n */\nfunction showRightButton(optionid, buttontype) {\n\n    // eslint-disable-next-line no-console\n    console.log(SELECTORS.MODALID + optionid + ' ' + SELECTORS.INMODALBUTTON);\n\n    // If we are not yet on the last booking page.\n    if (currentbookitpage[optionid] + 1 < totalbookitpages[optionid]) {\n        const element = document.querySelector(SELECTORS.MODALID + optionid + ' ' + SELECTORS.CONTINUEBUTTON);\n        element.classList.remove('hidden');\n\n        const inModalButton = document.querySelector(SELECTORS.MODALID + optionid + ' ' + SELECTORS.INMODALBUTTON);\n        inModalButton.classList.add('hidden');\n\n        if (buttontype == 1) {\n            element.classList.add('disabled');\n        }\n\n    } else {\n        // We are on the last booking page.\n        const element = document.querySelector(SELECTORS.MODALID + optionid + ' ' + SELECTORS.CONTINUEBUTTON);\n        element.classList.add('hidden');\n\n        if (buttontype == 1) {\n            const inModalButton = document.querySelector(SELECTORS.MODALID + optionid + ' ' + SELECTORS.INMODALBUTTON);\n            inModalButton.classList.add('hidden');\n        } else {\n            const inModalButton = document.querySelector(SELECTORS.MODALID + optionid + ' ' + SELECTORS.INMODALBUTTON);\n            inModalButton.classList.remove('hidden');\n        }\n    }\n    if (currentbookitpage[optionid] > 0) {\n        const element = document.querySelector(SELECTORS.MODALID + optionid + ' ' + SELECTORS.BACKBUTTON);\n        element.classList.remove('hidden');\n\n        if (buttontype == 1) {\n            element.classList.add('disabled');\n        }\n\n    } else {\n        const element = document.querySelector(SELECTORS.MODALID + optionid + ' ' + SELECTORS.BACKBUTTON);\n        element.classList.add('hidden');\n    }\n\n}\n\n/**\n *\n * @param {integer} optionid\n * @param {boolean} show\n */\nexport function toggleContinueButton(optionid, show = null) {\n\n    const continueButton = document.querySelector(SELECTORS.MODALID + optionid + ' ' + SELECTORS.CONTINUEBUTTON);\n\n    const bookingButton = document.querySelector(SELECTORS.MODALID + optionid + ' ' + SELECTORS.BOOKITBUTTON);\n\n    // eslint-disable-next-line no-console\n    console.log(bookingButton, optionid, show);\n\n    if (continueButton) {\n        disableButton(continueButton, show);\n    }\n    if (bookingButton) {\n        disableButton(bookingButton, show);\n    }\n\n    showBookItButton(optionid, show);\n}\n\n/**\n *\n * @param {integer} optionid\n * @param {boolean} show\n */\nfunction showBookItButton(optionid, show) {\n\n    // Hide Bookit button.\n    const inModalButton = document.querySelector(SELECTORS.MODALID + optionid + ' ' + SELECTORS.INMODALBUTTON);\n    if (currentbookitpage[optionid] + 1 == totalbookitpages[optionid]) {\n        // Being on the last page.\n        if (show) {\n            inModalButton.classList.remove('hidden');\n        } else {\n            inModalButton.classList.add('hidden');\n        }\n    }\n}\n\n/**\n *\n * @param {HTMLElement} element\n * @param {boolean} show\n */\nfunction disableButton(element, show) {\n\n    // eslint-disable-next-line no-console\n    console.log(element, show);\n\n    // If show is not defined yet, we define it automatically.\n    if (show === null) {\n        if (element.classList.contains('disabled')) {\n            show = true;\n        } else {\n            show = false;\n        }\n    }\n\n    // Now we add or remove the disabled class.\n    if (show) {\n        element.classList.remove('disabled');\n    } else {\n        element.classList.add('disabled');\n    }\n}\n\n/**\n * Add the click listener to a prepage modal button.\n * @param {integer} optionid\n * @param {bool} back // If it is the back button, it's true, else its continue.\n */\nfunction initializeButton(optionid, back) {\n    let selector = \"\";\n\n    if (back) {\n        selector = SELECTORS.MODALID + optionid + ' ' + SELECTORS.BACKBUTTON;\n    } else {\n        selector = SELECTORS.MODALID + optionid + ' ' + SELECTORS.CONTINUEBUTTON;\n    }\n\n    const element = document.querySelector(selector);\n\n    // eslint-disable-next-line no-console\n    // console.log(element, selector);\n\n    if (element && !element.dataset.prepageinit) {\n        element.dataset.prepageinit = true;\n\n        element.addEventListener('click', (e) => {\n\n            e.stopPropagation();\n\n            if (element.classList.contains('hidden')) {\n                return;\n            }\n\n            if (back) {\n                currentbookitpage[optionid]--;\n            } else {\n                currentbookitpage[optionid]++;\n            }\n\n            loadPreBookingPage(optionid);\n        });\n    }\n}\n\n/**\n *\n * @param {int} itemid\n * @param {string} area\n * @param {int} userid\n */\nfunction bookit(itemid, area, userid) {\n\n    Ajax.call([{\n        methodname: \"mod_booking_bookit\",\n        args: {\n            'itemid': itemid,\n            'area': area,\n            'userid': userid,\n        },\n        done: function(res) {\n\n            // eslint-disable-next-line no-console\n            console.log(res);\n\n            const jsonarray = JSON.parse(res.json);\n\n            // We might have more than one template to render.\n            const templates = res.template.split(',');\n\n            // There might be more than one button area.\n            const buttons = document.querySelectorAll(SELECTORS.BOOKITBUTTON +\n                '[data-itemid=\\'' + itemid + '\\']' +\n                '[data-area=\\'' + area + '\\']');\n\n            // We run through every button. and render the data.\n            buttons.forEach(button => {\n\n                while (button.firstChild) {\n                    const child = button.firstChild;\n                    child.remove();\n                }\n\n                // For every button, we need a new jsonarray.\n                const arraytoreduce = [...jsonarray];\n\n                // eslint-disable-next-line no-console\n                console.log(templates, arraytoreduce);\n\n                templates.forEach(template => {\n                    const data = arraytoreduce.shift();\n\n                    // We need to check if this will render the prepagemodal again.\n                    // We never render the prepage modal in the in modal button.\n                    if (!(template === 'mod_booking/prepagemodal'\n                            && button.parentElement.classList.contains('in-modal-button'))) {\n\n                        // eslint-disable-next-line no-console\n                        console.log(template, data, button);\n\n                        const datatorender = data.data ?? data;\n\n                        // eslint-disable-next-line no-console\n                        console.log(datatorender);\n\n                        Templates.renderForPromise(template, datatorender).then(({html, js}) => {\n\n                        Templates.appendNodeContents(button, html, js);\n\n                        return true;\n                        }).catch(ex => {\n                            Notification.addNotification({\n                                message: 'failed rendering ' + ex,\n                                type: \"danger\"\n                            });\n                        });\n                    }\n                });\n\n                // eslint-disable-next-line no-console\n                console.log('no destroy modal');\n\n                const backdrop = document.querySelector(SELECTORS.STATICBACKDROP);\n                const modal = document.querySelector(SELECTORS.MODALID + itemid);\n                if (modal) {\n                    modal.classList.remove('show');\n                }\n                if (backdrop) {\n                    backdrop.remove();\n                }\n            });\n        }\n    }]);\n}"],"names":["optionid","show","continueButton","document","querySelector","SELECTORS","bookingButton","console","log","disableButton","showBookItButton","currentbookitpage","totalbookitpages","itemid","area","buttons","querySelectorAll","selector","forEach","button","dataset","nojs","initialized","userid","addEventListener","e","stopPropagation","target","call","methodname","args","done","res","jsonarray","JSON","parse","json","templates","template","split","firstChild","remove","arraytoreduce","data","shift","parentElement","classList","contains","datatorender","renderForPromise","then","html","js","appendNodeContents","catch","ex","addNotification","message","type","backdrop","modal","bookit","isHidden","el","style","window","getComputedStyle","display","visibility","totalnumberofpages","callback","element","observer","MutationObserver","observed","observe","attributes","respondToVisibility","loadPreBookingPage","initializeButton","removeChild","jsonobject","dataarray","buttontype","add","showRightButton","fail","err","inModalButton","back","prepageinit"],"mappings":"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"}