{"version":3,"file":"dynamiceditoptionform.min.js","sources":["../src/dynamiceditoptionform.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    mod_booking\n * @author     Georg Maißer\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Dynamic edit option form.\n *\n * @module     mod_booking/dynamiceditoptionform\n * @copyright  2023 Wunderbyte GmbH\n * @author     Georg Maißer\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport DynamicForm from 'core_form/dynamicform';\n\nconst SELECTORS = {\n    OPTIONDATELEMENT: '[name=\"optiondate-element\"]',\n    DELETEOPTIONDATE: 'deleteoptiondate',\n    DELETEOPTIONDATEBUTTON: '[name^=\"deletedate_\"]',\n    PAGE: '[id=\"page\"]'\n};\n\n\nexport const init = (cmid, id, optionid, bookingid, copyoptionid, returnurl) => {\n    // Initialize the form - pass the container element and the form class name.\n\n    // eslint-disable-next-line no-console\n    console.log('params: ', cmid, id, optionid, bookingid, copyoptionid, returnurl);\n\n    const element = document.querySelector('#editoptionsformcontainer');\n\n    // eslint-disable-next-line no-console\n    console.log(element);\n    const dynamicForm = new DynamicForm(element, 'mod_booking\\\\form\\\\option_form');\n\n    // eslint-disable-next-line no-console\n    console.log(dynamicForm);\n    // By default the form is removed from the DOM after it is submitted, you may want to change this behavior:\n    dynamicForm.addEventListener(dynamicForm.events.FORM_SUBMITTED, (e) => {\n        e.preventDefault();\n        const response = e.detail;\n\n        if (response.returnurl && response.returnurl.length > 0) {\n            window.location.href = response.returnurl;\n        }\n\n        // eslint-disable-next-line no-console\n        console.log(response);\n        // It is recommended to reload the form after submission because the elements may change.\n        // This will also remove previous submission errors. You will need to pass the same arguments to the form\n        // that you passed when you rendered the form on the page.\n        dynamicForm.load(e.detail);\n    });\n\n    dynamicForm.addEventListener(dynamicForm.events.FORM_CANCELLED, (e) => {\n        e.preventDefault();\n\n        if (returnurl && returnurl.length > 0) {\n            window.location.href = returnurl;\n        } else {\n            // Just in case we have no returnurl.\n            dynamicForm.load([cmid, id, optionid, bookingid, copyoptionid, returnurl]);\n        }\n    });\n    dynamicForm.addEventListener(dynamicForm.events.SERVER_VALIDATION_ERROR, () => {\n        showInvalidFeedback();\n        // eslint-disable-next-line no-console\n        console.log('validation error');\n    });\n\n    dynamicForm.addEventListener(dynamicForm.events.CLIENT_VALIDATION_ERROR, () => {\n        showInvalidFeedback();\n        // eslint-disable-next-line no-console\n        console.log('validation error');\n    });\n\n    var checkbox1 = document.querySelector('[type=\"checkbox\"][name=\"restrictanswerperiodopening\"]');\n    var checkbox2 = document.querySelector('[type=\"checkbox\"][name=\"restrictanswerperiodclosing\"]');\n    var conditionalCheckbox = document.querySelector('[type=\"checkbox\"][name=\"bo_cond_booking_time_sqlfiltercheck\"]');\n    let closest = conditionalCheckbox.closest('[class^=\"form-group row\"],[class*=\" fitem\"]');\n\n    dynamicForm.addEventListener('change', e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n\n        if (e.target.name == 'optiontemplateid') {\n            window.skipClientValidation = true;\n            let button = document.querySelector('[name=\"btn_changetemplate\"]');\n            dynamicForm.processNoSubmitButton(button);\n        }\n\n        if (e.target.name == 'restrictanswerperiodopening' || e.target.name == 'restrictanswerperiodclosing') {\n            hidecheckbox(checkbox1, checkbox2, closest, conditionalCheckbox, true);\n\n        }\n    });\n    hidecheckbox(checkbox1, checkbox2, closest, conditionalCheckbox, false);\n\n\n    const page = document.querySelector(SELECTORS.PAGE);\n\n    if (page) {\n\n        page.addEventListener('click', e => {\n\n            const element = e.target;\n\n            // eslint-disable-next-line no-console\n            console.log('target', element);\n\n            if (element.classList.contains(SELECTORS.DELETEOPTIONDATE)) {\n\n                const container = element.closest(SELECTORS.OPTIONDATELEMENT);\n\n                // eslint-disable-next-line no-console\n                console.log('container', container, container.querySelector('.bg-white'));\n\n                if (container) {\n\n                    const card = container.querySelector('.bg-white');\n                    if (card) {\n\n                        // eslint-disable-next-line no-console\n                        console.log('card', card);\n\n                        card.classList.remove('bg-white');\n                        card.classList.add('bg-danger');\n                    }\n\n                    const deletebutton = container.querySelector(SELECTORS.DELETEOPTIONDATEBUTTON);\n                    if (deletebutton) {\n\n                        // eslint-disable-next-line no-console\n                        console.log('deletebutton', deletebutton);\n\n                        deletebutton.click();\n                    }\n                }\n            }\n        });\n    }\n\n    const optiondateelements = document.querySelectorAll(SELECTORS.OPTIONDATELEMENT);\n\n    // eslint-disable-next-line no-console\n    console.log(optiondateelements);\n};\n\n/**\n * Hide the given checkbox.\n * @param {mixed} checkbox1\n * @param {mixed} checkbox2\n * @param {mixed} closest\n * @param {mixed} conditionalCheckbox\n * @param {boolean} withelse\n */\nfunction hidecheckbox(checkbox1, checkbox2, closest, conditionalCheckbox, withelse) {\n    if (closest === null) {\n        return;\n    }\n    if (!checkbox1.checked && !checkbox2.checked) {\n        conditionalCheckbox.value = \"\";\n        conditionalCheckbox.checked = false;\n        closest.style.display = \"none\";\n    } else if (withelse) {\n        closest.style.display = \"\";\n    }\n}\n\n/**\n * Show invalide feedback. Go through closest elements and open them.\n *\n *\n */\nfunction showInvalidFeedback() {\n\n    // Select all div elements with both 'form-control-feedback' and 'invalid-feedback' classes.\n    const elements = document.querySelectorAll('.invalid-feedback');\n    // Filter to keep only those that have non-empty content.\n    const nonEmptyElements = Array.from(elements).filter(element => element.textContent.trim() !== '');\n\n    // eslint-disable-next-line no-console\n    console.log(nonEmptyElements);\n\n    const container = document.querySelector('#editoptionsformcontainer');\n\n    nonEmptyElements.forEach((element) => {\n        let currentElement = element;\n\n        while (currentElement && currentElement !== container) {\n            currentElement = currentElement.parentElement;\n\n            if (currentElement && currentElement.classList.contains('collapse')) {\n                currentElement.classList.add('show');\n            }\n        }\n    });\n    if (nonEmptyElements.length > 0) {\n        let firstelement = nonEmptyElements[0];\n        firstelement.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center'\n        });\n    }\n}\n"],"names":["SELECTORS","hidecheckbox","checkbox1","checkbox2","closest","conditionalCheckbox","withelse","checked","style","display","value","showInvalidFeedback","elements","document","querySelectorAll","nonEmptyElements","Array","from","filter","element","textContent","trim","console","log","container","querySelector","forEach","currentElement","parentElement","classList","contains","add","length","scrollIntoView","behavior","block","cmid","id","optionid","bookingid","copyoptionid","returnurl","dynamicForm","DynamicForm","addEventListener","events","FORM_SUBMITTED","e","preventDefault","response","detail","window","location","href","load","FORM_CANCELLED","SERVER_VALIDATION_ERROR","CLIENT_VALIDATION_ERROR","target","name","skipClientValidation","button","processNoSubmitButton","page","card","remove","deletebutton","click","optiondateelements"],"mappings":"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"}