{"version":3,"file":"button_notifyme.min.js","sources":["../src/button_notifyme.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    mod_booking\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport {get_string as getString} from 'core/str';\n\n/**\n * Gets called from mustache template.\n */\nexport const init = () => {\n\n    const buttons = document.querySelectorAll(\".booking-button-notify-me\");\n\n    if (buttons) {\n        buttons.forEach(button => {\n\n            if (button.dataset.initialized) {\n                return;\n            }\n            const userid = button.dataset.userid;\n            const itemid = button.dataset.itemid;\n\n            button.addEventListener('click', () => {\n                toggleNotifiy(button, userid, itemid);\n            });\n            button.dataset.initialized = true;\n        });\n    }\n};\n\n/**\n * Toggle Notify\n * @param {any} button\n * @param {int} userid\n * @param {int} optionid\n */\n export const toggleNotifiy = (\n    button,\n    userid,\n    optionid) => {\n\n    Ajax.call([{\n        methodname: \"mod_booking_toggle_notify_user\",\n        args: {\n            'userid': userid,\n            'optionid': optionid\n        },\n        done: function(res) {\n\n            toggleButton(button, res.status);\n\n            return true;\n        },\n        fail: function(err) {\n\n            // eslint-disable-next-line no-console\n            console.log('something went wrong', err);\n        }\n    }]);\n};\n\n/**\n *\n * @param {*} button\n * @param {*} status\n */\nfunction toggleButton(button, status) {\n    const statusstring = status == 1 ? 'alreadyonlist' : 'notifyme';\n\n    getString(statusstring, 'mod_booking').then(res => {\n        if (status == 1) {\n            button.innerHTML = '<i class=\"fa fa-bell\" aria-hidden=\"true\"></i>';\n        } else {\n            button.innerHTML = '<i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>';\n        }\n        button.setAttribute('title', res);\n        button.removeAttribute('data-original-title');\n        return;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}"],"names":["buttons","document","querySelectorAll","forEach","button","dataset","initialized","userid","itemid","addEventListener","toggleNotifiy","optionid","call","methodname","args","done","res","status","statusstring","then","innerHTML","setAttribute","removeAttribute","catch","e","console","log","toggleButton","fail","err"],"mappings":";;;;;2KA2BoB,eAEVA,QAAUC,SAASC,iBAAiB,6BAEtCF,SACAA,QAAQG,SAAQ,SAAAC,YAERA,OAAOC,QAAQC,iBAGbC,OAASH,OAAOC,QAAQE,OACxBC,OAASJ,OAAOC,QAAQG,OAE9BJ,OAAOK,iBAAiB,SAAS,WAC7BC,cAAcN,OAAQG,OAAQC,WAElCJ,OAAOC,QAAQC,aAAc,WAW3BI,cAAgB,SAC1BN,OACAG,OACAI,wBAEKC,KAAK,CAAC,CACPC,WAAY,iCACZC,KAAM,QACQP,gBACEI,UAEhBI,KAAM,SAASC,qBAmBDZ,OAAQa,YACpBC,aAAyB,GAAVD,OAAc,gBAAkB,+BAE3CC,aAAc,eAAeC,MAAK,SAAAH,KAEpCZ,OAAOgB,UADG,GAAVH,OACmB,gDAEA,kDAEvBb,OAAOiB,aAAa,QAASL,KAC7BZ,OAAOkB,gBAAgB,0BAExBC,OAAM,SAAAC,GAELC,QAAQC,IAAIF,MA/BRG,CAAavB,OAAQY,IAAIC,SAElB,GAEXW,KAAM,SAASC,KAGXJ,QAAQC,IAAI,uBAAwBG"}